---
name: Release Jobs

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      # Create github release
      - id: version
        run: |
          echo "::set-output name=version::$(python setup.py --version)"

      - id: tag_check
        run: |
          [[ $(git tag | grep "v${{ steps.version.outputs.version }}") == '' ]]

      - id: changelog
        if: ${{ success() }}
        uses: ScottBrenner/generate-changelog-action@1.0.2
        env:
          REPO: ${{ github.repository }}
        with:
          package-dir: .github/workflows/changelog_package.json

      - id: create_release
        if: ${{ success() }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}

    outputs:
      tag_check: ${{ steps.tag_check.conclusion }}
      version: ${{ steps.version.outputs.version }}
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}

  build_python:
    runs-on: ubuntu-20.04

    needs: release
    if: ${{ needs.release.outputs.tag_check == 'success' }}

    steps:
      - uses: actions/checkout@v2

      # Build and push python package
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - run: python setup.py sdist bdist_wheel

      - name: upload sdist
        id: upload_sdist
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: ./dist/Emojirades-${{ needs.release.outputs.version }}.tar.gz
          asset_name: Emojirades-${{ needs.release.outputs.version }}.tar.gz
          asset_content_type: application/tar+gzip

      - name: upload bdist_wheel
        id: upload_bdist_wheel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/Emojirades-${{ needs.release.outputs.version }}-py3-none-any.whl
          asset_name: Emojirades-${{ needs.release.outputs.version }}-py3-none-any.whl
          asset_content_type: application/x-pywheel+zip

      - uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  build_container:
    runs-on: ubuntu-20.04

    needs: release
    if: ${{ needs.release.outputs.tag_check == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags:
            emojirades/emojirades:latest
            emojirades/emojirades:${{ needs.release.outputs.version }}
