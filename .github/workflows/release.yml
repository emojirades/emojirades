---
name: Release Jobs

on:
  push:
    tags:
      - "*"

jobs:
  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - id: version
        run: |
          echo "::set-output name=version::$(python3 -c 'import emojirades; print(emojirades.VERSION[1:])')"

      - id: tag_check
        run: |
          [[ $(git tag | grep "v${{ steps.version.outputs.version }}") == 'v${{ steps.version.outputs.version }}' ]]

      - id: create_release
        if: ${{ success() }}
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          generate_release_notes: true

    outputs:
      tag_check: ${{ steps.tag_check.conclusion }}
      version: ${{ steps.version.outputs.version }}
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}

  build_python:
    runs-on: ubuntu-20.04

    needs: release
    if: ${{ needs.release.outputs.tag_check == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - run: pip install build setuptools wheel

      - run: python3 -m build

      - name: upload sdist
        if: ${{ success() }}
        id: upload_sdist
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: ./dist/emojirades-${{ needs.release.outputs.version }}.tar.gz
          asset_name: emojirades-${{ needs.release.outputs.version }}.tar.gz
          asset_content_type: application/tar+gzip

      - name: upload bdist_wheel
        if: ${{ success() }}
        id: upload_bdist_wheel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: ./dist/emojirades-${{ needs.release.outputs.version }}-py3-none-any.whl
          asset_name: emojirades-${{ needs.release.outputs.version }}-py3-none-any.whl
          asset_content_type: application/x-pywheel+zip

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        if: ${{ success() }}
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  build_container:
    runs-on: ubuntu-20.04

    needs: release
    if: ${{ needs.release.outputs.tag_check == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            emojirades/emojirades
            ghcr.io/emojirades/emojirades

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
